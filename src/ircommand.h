#ifndef IRCommand_h
#define IRCommand_h

#include <IRsend.h>
#include <IRutils.h>
#include <IRremoteESP8266.h>

class IRCommand {
  public:
    uint16_t length;
    uint16_t *rawData;
    uint16_t frequency;
 
    IRCommand(uint16_t length, uint16_t *rawData, uint16_t frequency = 38000){
      this->length = length;
      this->rawData = rawData;
      this->frequency = frequency;
    }
};

class IRCommander{
  private:
    IRsend *irSend;
  public:
    void execute(IRCommand *command){
      this->irSend->sendRaw(command->rawData, command->length, command->frequency);
    }
    IRCommander(byte irPin){
      this->irSend = new IRsend(irPin);
      this->irSend->begin();
    }
};

IRCommand *CMD_ON_OFF = new IRCommand(239, (uint16_t[]) {1270, 370, 1280, 366, 466, 1194, 1282, 366, 1284, 368, 464, 1196, 464, 
1198, 468, 1194, 464, 1196, 466, 1196, 464, 1198, 1284, 7018, 1282, 368, 1282, 368, 462, 1198, 1286, 368, 1280, 368, 466, 
1196, 462, 1200, 462, 1198, 464, 1200, 464, 1198, 462, 1200, 1282, 7088, 1286, 366, 1284, 368, 466, 1194, 1286, 366, 1282,
 366, 466, 1196, 468, 1194, 464, 1200, 464, 1200, 460, 1200, 466, 1194, 1286, 7020, 1282, 366, 1284, 368, 462, 1198, 1282, 
 368, 1284, 368, 460, 1198, 464, 1198, 464, 1200, 464, 1198, 466, 1194, 466, 1196, 1284, 7090, 1284, 368, 1282, 368, 464, 
 1198, 1282, 372, 1278, 368, 464, 1196, 466, 1200, 460, 1200, 466, 1196, 464, 1198, 462, 1200, 1282, 7022, 1286, 366, 1280, 
 368, 466, 1196, 1282, 370, 1280, 374, 462, 1200, 460, 1202, 460, 1200, 464, 1200, 462, 1198, 466, 1196, 1286, 7090, 1280, 
 372, 1280, 368, 464, 1198, 1256, 396, 1254, 398, 462, 1198, 462, 1202, 462, 1204, 458, 1200, 460, 1200, 468, 1196, 1254, 
 7050, 1254, 398, 1250, 400, 436, 1226, 1252, 396, 1232, 418, 438, 1226, 436, 1224, 462, 1202, 436, 1226, 460, 1202, 438, 
 1224, 1234, 7142, 1256, 394, 1232, 422, 436, 1222, 1232, 420, 1232, 418, 438, 1226, 436, 1224, 464, 1200, 460, 1202, 464, 
 1198, 462, 1200, 1284, 7022, 1232, 418, 1232, 422, 434, 1226, 1234, 416, 1254, 396, 436, 1226, 436, 1228, 460, 1204, 436, 
 1226, 436, 1226, 436, 1226, 1234});

IRCommand *CMD_SPEED = new IRCommand(335, (uint16_t[]) {1218, 420, 1230, 418, 414, 1250, 1230, 420, 1228, 420, 412, 1252, 410, 
1248, 412, 1250, 412, 1252, 410, 1250, 1232, 420, 410, 7900, 1232, 420, 1232, 418, 414, 1248, 1232, 420, 1230, 418, 412, 1252, 
434, 1228, 434, 1224, 436, 1226, 416, 1246, 1234, 418, 410, 7966, 1234, 416, 1232, 418, 434, 1228, 1232, 418, 1230, 420, 436, 
1224, 436, 1226, 436, 1226, 436, 1224, 440, 1224, 1252, 396, 436, 7876, 1284, 368, 1282, 372, 460, 1198, 1282, 368, 1284, 366, 
466, 1196, 464, 1200, 466, 1196, 464, 1196, 466, 1194, 1284, 368, 462, 7914, 1286, 366, 1282, 368, 464, 1200, 1282, 368, 1282, 
370, 462, 1200, 462, 1200, 462, 1200, 462, 1196, 466, 1196, 1286, 366, 462, 7854, 1282, 370, 1280, 368, 466, 1194, 1284, 370, 
1280, 370, 462, 1198, 464, 1200, 462, 1200, 462, 1198, 462, 1202, 1256, 398, 460, 7916, 1234, 416, 1232, 422, 434, 1226, 1232, 
418, 1230, 422, 432, 1230, 436, 1224, 414, 1248, 436, 1228, 434, 1228, 1234, 418, 436, 7882, 1230, 418, 1232, 416, 412, 1250, 
1232, 416, 1234, 416, 412, 1250, 416, 1248, 436, 1226, 438, 1226, 412, 1250, 1230, 418, 414, 7966, 1232, 420, 1232, 418, 412, 
1250, 1232, 418, 1234, 418, 410, 1250, 412, 1250, 414, 1250, 412, 1250, 416, 1248, 1232, 418, 412, 7904, 1234, 418, 1230, 418, 
414, 1248, 1234, 416, 1234, 420, 412, 1248, 414, 1250, 414, 1248, 414, 1248, 412, 1250, 1232, 420, 416, 7964, 1232, 420, 1228, 
420, 410, 1252, 1230, 422, 1230, 418, 412, 1252, 410, 1250, 412, 1250, 414, 1248, 414, 1250, 1234, 418, 410, 7904, 1232, 420, 
1258, 390, 438, 1224, 1256, 396, 1254, 396, 464, 1198, 464, 1200, 466, 1196, 464, 1200, 460, 1200, 1256, 394, 462, 7918, 1256, 
394, 1254, 396, 436, 1228, 1256, 392, 1258, 394, 462, 1202, 462, 1198, 462, 1200, 436, 1226, 462, 1200, 1254, 398, 462, 7854, 
1232, 420, 1230, 418, 460, 1204, 1230, 420, 1230, 422, 436, 1226, 434, 1228, 434, 1230, 460, 1200, 436, 1224, 1234, 418, 436});

IRCommand *CMD_ROTATE = new IRCommand(95, (uint16_t[]) {1232, 418, 1230, 418, 412, 1246, 1232, 418, 1230, 418, 412, 1248, 412, 
1246, 1232, 418, 412, 1248, 412, 1248, 412, 1246, 414, 7892, 1232, 418, 1230, 420, 412, 1246, 1232, 418, 1230, 418, 412, 1248, 
412, 1248, 1230, 418, 412, 1248, 412, 1248, 412, 1248, 412, 7962, 1232, 418, 1230, 418, 412, 1248, 1232, 418, 1230, 420, 412, 
1246, 414, 1248, 1232, 418, 412, 1248, 412, 1248, 414, 1248, 412, 7896, 1232, 418, 1230, 418, 412, 1248, 1232, 418, 1232, 418, 
412, 1248, 412, 1248, 1232, 418, 412, 1248, 414, 1248, 414, 1248, 412});

#endif